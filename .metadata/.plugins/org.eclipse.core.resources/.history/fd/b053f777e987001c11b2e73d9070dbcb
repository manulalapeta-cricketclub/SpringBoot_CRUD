package com.sarat.curdoperations.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sarat.curdoperations.customexception.BusinessException;
import com.sarat.curdoperations.entity.Employee;
import com.sarat.curdoperations.repository.EmployeeRepository;

@Service
public class EmployeeServiceImpl implements EmployeeService {

	@Autowired
	private EmployeeRepository employeeRepository;

	@Override
	public Employee addEmployee(Employee employee) {
		try {
			if (employee.getName().isEmpty() || employee.getName().length() == 0) {
				throw new BusinessException("601", "employee name is empty or it's blank");
			}
			Employee SaveEmployee = employeeRepository.save(employee);
			return SaveEmployee;
		} catch (IllegalArgumentException e) {
			throw new BusinessException("602", "given employee is null " + e.getMessage());
		} catch (Exception e) {
			throw new BusinessException("603", "Something went wrong while saving employee data " + e.getMessage());
		}

	}

	@Override
	public List<Employee> getAllEmployees() {

		try {
			List<Employee> list = employeeRepository.findAll();
			if (list.isEmpty()) {
				throw new BusinessException("604", "Hey list is empty to return ");
			}
			return list;
		} catch (Exception e) {
			throw new BusinessException("605",
					"Something went wrong in service layer while fetching all employees " + e.getMessage());
		}

	}

	@Override
	public Employee getEmployeeById(Long empId) {
		return employeeRepository.findById(empId).get();
	}

	@Override
	public void delEmployeeById(Long empId) {
		employeeRepository.deleteById(empId);
	}

}
